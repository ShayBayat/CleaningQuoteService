{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction QuoteComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_div_13_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const addOn_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.addOns[addOn_r2] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const addOn_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.addOns[addOn_r2]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", addOn_r2, \" \");\n  }\n}\nfunction QuoteComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Your Quote: \", ctx_r1.quote, \" SEK\");\n  }\n}\nexport class QuoteComponent {\n  constructor() {\n    // Define the properties needed for the quote component\n    this.selectedCity = ''; // Initialize to an empty string\n    this.area = 0; // Initialize area to 0\n    this.addOns = {\n      windowCleaning: false,\n      balconyCleaning: false,\n      junkRemoval: false\n    }; // Initialize addOns with default values\n  }\n  // Placeholder method for handling city changes\n  onCityChange() {\n    // Logic for city change can be added here\n  }\n  // Method to calculate the quote\n  calculateQuote() {\n    // Logic to calculate the quote based on area, city, and selected add-ons\n    // For example, you can display a message or calculate the total price\n    console.log(`Calculating quote for ${this.area} m² in ${this.selectedCity}`);\n    // Add more logic as needed\n  }\n}\n\nQuoteComponent.ɵfac = function QuoteComponent_Factory(t) {\n  return new (t || QuoteComponent)();\n};\nQuoteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuoteComponent,\n  selectors: [[\"app-quote\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[\"for\", \"city\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"Stockholm\"], [\"value\", \"Uppsala\"], [\"for\", \"area\"], [\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function QuoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Quote Request\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"label\", 0);\n      i0.ɵɵtext(4, \"Select City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_5_listener($event) {\n        return ctx.selectedCity = $event;\n      })(\"change\", function QuoteComponent_Template_select_change_5_listener() {\n        return ctx.onCityChange();\n      });\n      i0.ɵɵelementStart(6, \"option\", 2);\n      i0.ɵɵtext(7, \"Stockholm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"option\", 3);\n      i0.ɵɵtext(9, \"Uppsala\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Area (sqm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.area = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, QuoteComponent_div_13_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementStart(14, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_14_listener() {\n        return ctx.calculateQuote();\n      });\n      i0.ɵɵtext(15, \"Get Quote\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, QuoteComponent_div_16_Template, 3, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedCity);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.area);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.addOnOptions);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.quote !== null);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAYIA,2BAAwC;IACfA;MAAA;MAAA;MAAA;MAAA;IAAA,EAA2B;IAAlDA,iBAAqD;IAACA,YACxD;IAAAA,iBAAM;;;;;IADmBA,eAA2B;IAA3BA,iDAA2B;IAAIA,eACxD;IADwDA,yCACxD;;;;;IAIAA,2BAA4B;IACtBA,YAA2B;IAAAA,iBAAK;;;;IAAhCA,eAA2B;IAA3BA,2DAA2B;;;ACbrC,OAAM,MAAOC,cAAc;EAJ3BC;IAKE;IACA,iBAAY,GAAW,EAAE,CAAC,CAAC;IAC3B,SAAI,GAAW,CAAC,CAAC,CAAC;IAClB,WAAM,GAAQ;MACZC,cAAc,EAAE,KAAK;MACrBC,eAAe,EAAE,KAAK;MACtBC,WAAW,EAAE;KACd,CAAC,CAAC;;EAEH;EACAC,YAAY;IACV;EAAA;EAGF;EACAC,cAAc;IACZ;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,IAAI,CAACC,IAAI,UAAU,IAAI,CAACC,YAAY,EAAE,CAAC;IAC5E;EACF;;;AArBWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDL3BhB,2BAAK;MACGA,6BAAa;MAAAA,iBAAK;MACtBA,gCAAkB;MAAAA,4BAAY;MAAAA,iBAAQ;MACtCA,iCAA6D;MAArDA;QAAA;MAAA,EAA0B;QAAA,OAAWiB,kBAAc;MAAA,EAAzB;MAChCjB,iCAA0B;MAAAA,yBAAS;MAAAA,iBAAS;MAC5CA,iCAAwB;MAAAA,uBAAO;MAAAA,iBAAS;MAG1CA,iCAAkB;MAAAA,4BAAW;MAAAA,iBAAQ;MACrCA,iCAA0C;MAArBA;QAAA;MAAA,EAAkB;MAAvCA,iBAA0C;MAE1CA,iEAEM;MAENA,kCAAmC;MAA3BA;QAAA,OAASiB,oBAAgB;MAAA,EAAC;MAACjB,0BAAS;MAAAA,iBAAS;MAErDA,iEAEM;MACRA,iBAAM;;;MAjBIA,eAA0B;MAA1BA,0CAA0B;MAMbA,eAAkB;MAAlBA,kCAAkB;MAEhBA,eAAe;MAAfA,0CAAe;MAMhCA,eAAoB;MAApBA,yCAAoB","names":["i0","QuoteComponent","constructor","windowCleaning","balconyCleaning","junkRemoval","onCityChange","calculateQuote","console","log","area","selectedCity","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\shaya\\CleaningQuoteService\\ClientApp\\src\\app\\quote\\quote.component.html","C:\\Users\\shaya\\CleaningQuoteService\\ClientApp\\src\\app\\quote\\quote.component.ts"],"sourcesContent":["<!-- quote.component.html -->\n<div>\n    <h2>Quote Request</h2>\n    <label for=\"city\">Select City:</label>\n    <select [(ngModel)]=\"selectedCity\" (change)=\"onCityChange()\">\n      <option value=\"Stockholm\">Stockholm</option>\n      <option value=\"Uppsala\">Uppsala</option>\n    </select>\n  \n    <label for=\"area\">Area (sqm):</label>\n    <input type=\"number\" [(ngModel)]=\"area\" />\n  \n    <div *ngFor=\"let addOn of addOnOptions\">\n      <input type=\"checkbox\" [(ngModel)]=\"addOns[addOn]\" /> {{ addOn }}\n    </div>\n  \n    <button (click)=\"calculateQuote()\">Get Quote</button>\n  \n    <div *ngIf=\"quote !== null\">\n      <h3>Your Quote: {{ quote }} SEK</h3>\n    </div>\n  </div>\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n})\nexport class QuoteComponent {\n  // Define the properties needed for the quote component\n  selectedCity: string = ''; // Initialize to an empty string\n  area: number = 0; // Initialize area to 0\n  addOns: any = {\n    windowCleaning: false,\n    balconyCleaning: false,\n    junkRemoval: false,\n  }; // Initialize addOns with default values\n\n  // Placeholder method for handling city changes\n  onCityChange() {\n    // Logic for city change can be added here\n  }\n\n  // Method to calculate the quote\n  calculateQuote() {\n    // Logic to calculate the quote based on area, city, and selected add-ons\n    // For example, you can display a message or calculate the total price\n    console.log(`Calculating quote for ${this.area} m² in ${this.selectedCity}`);\n    // Add more logic as needed\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}