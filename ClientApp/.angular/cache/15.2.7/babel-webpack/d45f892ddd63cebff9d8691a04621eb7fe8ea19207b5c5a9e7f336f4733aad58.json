{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction QuoteComponent_p_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Area: \", ctx_r0.area, \" m\\u00B2\");\n  }\n}\nfunction QuoteComponent_p_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"City: \", ctx_r1.selectedCity, \"\");\n  }\n}\nfunction QuoteComponent_p_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Total Quote: \", ctx_r2.quote, \" SEK\");\n  }\n}\nexport class QuoteComponent {\n  constructor() {\n    this.selectedCity = 'Stockholm'; // Default city\n    this.area = null; // Area input\n    this.addOns = {\n      windowCleaning: false,\n      balconyCleaning: false,\n      junkRemoval: false\n    };\n    this.quote = null; // To hold calculated quote\n  }\n\n  onCityChange() {\n    // Logic for handling city change if needed\n  }\n  calculateQuote() {\n    const pricePerSquareMeter = this.selectedCity === 'Stockholm' ? 65 : 55; //  pricing\n    let totalQuote = 0;\n    if (this.area) {\n      totalQuote = this.area * pricePerSquareMeter; // Calculate based on area\n    }\n    // Add costs for selected add-ons\n    if (this.addOns.windowCleaning) {\n      totalQuote += 300; // Example cost for window cleaning\n    }\n\n    if (this.addOns.balconyCleaning) {\n      totalQuote += 150; // Example cost for balcony cleaning\n    }\n\n    if (this.addOns.junkRemoval) {\n      totalQuote += 400; // Example cost for junk removal\n    }\n\n    this.quote = totalQuote; // Set the total quote\n  }\n}\n\nQuoteComponent.ɵfac = function QuoteComponent_Factory(t) {\n  return new (t || QuoteComponent)();\n};\nQuoteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuoteComponent,\n  selectors: [[\"app-quote\"]],\n  decls: 29,\n  vars: 8,\n  consts: [[\"for\", \"city\"], [\"id\", \"city\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"Stockholm\"], [\"value\", \"Uppsala\"], [\"for\", \"area\"], [\"type\", \"number\", \"id\", \"area\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"]],\n  template: function QuoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Get a Quote\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\", 0);\n      i0.ɵɵtext(3, \"Select City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_4_listener($event) {\n        return ctx.selectedCity = $event;\n      })(\"change\", function QuoteComponent_Template_select_change_4_listener() {\n        return ctx.onCityChange();\n      });\n      i0.ɵɵelementStart(5, \"option\", 2);\n      i0.ɵɵtext(6, \"Stockholm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 3);\n      i0.ɵɵtext(8, \"Uppsala\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Enter Area (m\\u00B2):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.area = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"h3\");\n      i0.ɵɵtext(14, \"Add-Ons:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.addOns.windowCleaning = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" Window Cleaning \");\n      i0.ɵɵelementStart(17, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.addOns.balconyCleaning = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" Balcony Cleaning \");\n      i0.ɵɵelementStart(19, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.addOns.junkRemoval = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \" Junk Removal\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_21_listener() {\n        return ctx.calculateQuote();\n      });\n      i0.ɵɵtext(22, \"Get Quote\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\")(24, \"h3\");\n      i0.ɵɵtext(25, \"Quote Summary:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, QuoteComponent_p_26_Template, 2, 1, \"p\", 8);\n      i0.ɵɵtemplate(27, QuoteComponent_p_27_Template, 2, 1, \"p\", 8);\n      i0.ɵɵtemplate(28, QuoteComponent_p_28_Template, 2, 1, \"p\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedCity);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.area);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addOns.windowCleaning);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.addOns.balconyCleaning);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.addOns.junkRemoval);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.area);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedCity);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.quote !== null);\n    }\n  },\n  dependencies: [i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IA4BEA,yBAAgB;IAAAA,YAAmB;IAAAA,iBAAI;;;;IAAvBA,eAAmB;IAAnBA,wDAAmB;;;;;IACnCA,yBAAwB;IAAAA,YAAwB;IAAAA,iBAAI;;;;IAA5BA,eAAwB;IAAxBA,wDAAwB;;;;;IAEhDA,yBAA0B;IAAAA,YAA4B;IAAAA,iBAAI;;;;IAAhCA,eAA4B;IAA5BA,4DAA4B;;;ACxBxD,OAAM,MAAOC,cAAc;EAJ3BC;IAKE,iBAAY,GAAW,WAAW,CAAC,CAAC;IACpC,SAAI,GAAkB,IAAI,CAAC,CAAC;IAC5B,WAAM,GAA+B;MACnCC,cAAc,EAAE,KAAK;MACrBC,eAAe,EAAE,KAAK;MACtBC,WAAW,EAAE;KACd;IACD,UAAK,GAAkB,IAAI,CAAC,CAAC;;;EAE7BC,YAAY;IACV;EAAA;EAGFC,cAAc;IACZ,MAAMC,mBAAmB,GAAG,IAAI,CAACC,YAAY,KAAK,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACzE,IAAIC,UAAU,GAAG,CAAC;IAElB,IAAI,IAAI,CAACC,IAAI,EAAE;MACbD,UAAU,GAAG,IAAI,CAACC,IAAI,GAAGH,mBAAmB,CAAC,CAAC;;IAGhD;IACA,IAAI,IAAI,CAACI,MAAM,CAACT,cAAc,EAAE;MAC9BO,UAAU,IAAI,GAAG,CAAC,CAAC;;;IAErB,IAAI,IAAI,CAACE,MAAM,CAACR,eAAe,EAAE;MAC/BM,UAAU,IAAI,GAAG,CAAC,CAAC;;;IAErB,IAAI,IAAI,CAACE,MAAM,CAACP,WAAW,EAAE;MAC3BK,UAAU,IAAI,GAAG,CAAC,CAAC;;;IAGrB,IAAI,CAACG,KAAK,GAAGH,UAAU,CAAC,CAAC;EAC3B;;;AAlCWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDN3BlB,0BAAI;MAAAA,2BAAW;MAAAA,iBAAK;MAGpBA,gCAAkB;MAAAA,4BAAY;MAAAA,iBAAQ;MACtCA,iCAAuE;MAArDA;QAAA;MAAA,EAA0B;QAAA,OAAWmB,kBAAc;MAAA,EAAzB;MAC1CnB,iCAA0B;MAAAA,yBAAS;MAAAA,iBAAS;MAC5CA,iCAAwB;MAAAA,uBAAO;MAAAA,iBAAS;MAI1CA,gCAAkB;MAAAA,sCAAgB;MAAAA,iBAAQ;MAC1CA,iCAAoD;MAArBA;QAAA;MAAA,EAAkB;MAAjDA,iBAAoD;MAEpDA,4BAAK;MACCA,yBAAQ;MAAAA,iBAAK;MAEjBA,iCAA6D;MAAtCA;QAAA;MAAA,EAAmC;MAA1DA,iBAA6D;MAACA,kCAC9D;MAAAA,iCAA8D;MAAvCA;QAAA;MAAA,EAAoC;MAA3DA,iBAA8D;MAACA,mCAC/D;MAAAA,iCAA0D;MAAnCA;QAAA;MAAA,EAAgC;MAAvDA,iBAA0D;MAACA,gCAC7D;MAAAA,iBAAM;MAGNA,kCAAmC;MAA3BA;QAAA,OAASmB,oBAAgB;MAAA,EAAC;MAACnB,0BAAS;MAAAA,iBAAS;MAErDA,4BAAK;MACCA,+BAAc;MAAAA,iBAAK;MAEvBA,6DAAuC;MACvCA,6DAAoD;MAEpDA,6DAA0D;MAC5DA,iBAAM;;;MA3BYA,eAA0B;MAA1BA,0CAA0B;MAObA,eAAkB;MAAlBA,kCAAkB;MAKxBA,eAAmC;MAAnCA,mDAAmC;MACnCA,eAAoC;MAApCA,oDAAoC;MACpCA,eAAgC;MAAhCA,gDAAgC;MASnDA,eAAU;MAAVA,+BAAU;MACVA,eAAkB;MAAlBA,uCAAkB;MAElBA,eAAoB;MAApBA,yCAAoB","names":["i0","QuoteComponent","constructor","windowCleaning","balconyCleaning","junkRemoval","onCityChange","calculateQuote","pricePerSquareMeter","selectedCity","totalQuote","area","addOns","quote","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\shaya\\CleaningQuoteService\\ClientApp\\src\\app\\quote\\quote.component.html","C:\\Users\\shaya\\CleaningQuoteService\\ClientApp\\src\\app\\quote\\quote.component.ts"],"sourcesContent":["<!-- quote.component.html -->\n<h2>Get a Quote</h2>\n\n<!-- City selection dropdown -->\n<label for=\"city\">Select City:</label>\n<select id=\"city\" [(ngModel)]=\"selectedCity\" (change)=\"onCityChange()\">\n  <option value=\"Stockholm\">Stockholm</option>\n  <option value=\"Uppsala\">Uppsala</option>\n</select>\n\n<!-- Area input field -->\n<label for=\"area\">Enter Area (m²):</label>\n<input type=\"number\" id=\"area\" [(ngModel)]=\"area\" />\n\n<div>\n  <h3>Add-Ons:</h3>\n  <!-- Checkbox inputs for add-ons -->\n  <input type=\"checkbox\" [(ngModel)]=\"addOns.windowCleaning\" /> Window Cleaning\n  <input type=\"checkbox\" [(ngModel)]=\"addOns.balconyCleaning\" /> Balcony Cleaning\n  <input type=\"checkbox\" [(ngModel)]=\"addOns.junkRemoval\" /> Junk Removal\n</div>\n\n<!-- Button to calculate the quote -->\n<button (click)=\"calculateQuote()\">Get Quote</button>\n\n<div>\n  <h3>Quote Summary:</h3>\n  <!-- Display area and city if they are selected -->\n  <p *ngIf=\"area\">Area: {{ area }} m²</p>\n  <p *ngIf=\"selectedCity\">City: {{ selectedCity }}</p>\n  <!-- Display total quote if calculated -->\n  <p *ngIf=\"quote !== null\">Total Quote: {{ quote }} SEK</p>\n</div>\n","// quote.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n})\nexport class QuoteComponent {\n  selectedCity: string = 'Stockholm'; // Default city\n  area: number | null = null; // Area input\n  addOns: { [key: string]: boolean } = {\n    windowCleaning: false,\n    balconyCleaning: false,\n    junkRemoval: false,\n  };\n  quote: number | null = null; // To hold calculated quote\n\n  onCityChange() {\n    // Logic for handling city change if needed\n  }\n\n  calculateQuote() {\n    const pricePerSquareMeter = this.selectedCity === 'Stockholm' ? 65 : 55; //  pricing\n    let totalQuote = 0;\n\n    if (this.area) {\n      totalQuote = this.area * pricePerSquareMeter; // Calculate based on area\n    }\n\n    // Add costs for selected add-ons\n    if (this.addOns.windowCleaning) {\n      totalQuote += 300; // Example cost for window cleaning\n    }\n    if (this.addOns.balconyCleaning) {\n      totalQuote += 150; // Example cost for balcony cleaning\n    }\n    if (this.addOns.junkRemoval) {\n      totalQuote += 400; // Example cost for junk removal\n    }\n\n    this.quote = totalQuote; // Set the total quote\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}