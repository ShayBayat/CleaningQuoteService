{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction QuoteComponent_p_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Area: \", ctx_r0.area, \" m\\u00B2\");\n  }\n}\nfunction QuoteComponent_p_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"City: \", ctx_r1.selectedCity, \"\");\n  }\n}\nexport class QuoteComponent {\n  constructor() {\n    // Define the properties needed for the quote component\n    this.selectedCity = ''; // Initialize to an empty string\n    this.area = 0; // Initialize area to 0\n    this.addOns = {\n      windowCleaning: false,\n      balconyCleaning: false,\n      junkRemoval: false\n    }; // Initialize addOns with default values\n  }\n  // Placeholder method for handling city changes\n  onCityChange() {\n    // Logic for city change can be added here\n  }\n  // Method to calculate the quote\n  calculateQuote() {\n    // Logic to calculate the quote based on area, city, and selected add-ons\n    // For example, you can display a message or calculate the total price\n    console.log(`Calculating quote for ${this.area} m² in ${this.selectedCity}`);\n    // Add more logic as needed\n  }\n}\n\nQuoteComponent.ɵfac = function QuoteComponent_Factory(t) {\n  return new (t || QuoteComponent)();\n};\nQuoteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuoteComponent,\n  selectors: [[\"app-quote\"]],\n  decls: 28,\n  vars: 7,\n  consts: [[\"for\", \"city\"], [\"id\", \"city\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"Stockholm\"], [\"value\", \"Uppsala\"], [\"for\", \"area\"], [\"type\", \"number\", \"id\", \"area\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"]],\n  template: function QuoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Get a Quote\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\", 0);\n      i0.ɵɵtext(3, \"Select City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_4_listener($event) {\n        return ctx.selectedCity = $event;\n      })(\"change\", function QuoteComponent_Template_select_change_4_listener() {\n        return ctx.onCityChange();\n      });\n      i0.ɵɵelementStart(5, \"option\", 2);\n      i0.ɵɵtext(6, \"Stockholm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 3);\n      i0.ɵɵtext(8, \"Uppsala\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Enter Area (m\\u00B2):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.area = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"h3\");\n      i0.ɵɵtext(14, \"Add-Ons:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.addOns.windowCleaning = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" Window Cleaning \");\n      i0.ɵɵelementStart(17, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.addOns.balconyCleaning = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" Balcony Cleaning \");\n      i0.ɵɵelementStart(19, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.addOns.junkRemoval = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \" Junk Removal\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_21_listener() {\n        return ctx.calculateQuote();\n      });\n      i0.ɵɵtext(22, \"Get Quote\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\")(24, \"h3\");\n      i0.ɵɵtext(25, \"Quote Summary:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, QuoteComponent_p_26_Template, 2, 1, \"p\", 8);\n      i0.ɵɵtemplate(27, QuoteComponent_p_27_Template, 2, 1, \"p\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedCity);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.area);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.addOns.windowCleaning);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.addOns.balconyCleaning);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.addOns.junkRemoval);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.area);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedCity);\n    }\n  },\n  dependencies: [i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAoBEA,yBAAgB;IAAAA,YAAmB;IAAAA,iBAAI;;;;IAAvBA,eAAmB;IAAnBA,wDAAmB;;;;;IACnCA,yBAAwB;IAAAA,YAAwB;IAAAA,iBAAI;;;;IAA5BA,eAAwB;IAAxBA,wDAAwB;;;ACflD,OAAM,MAAOC,cAAc;EAJ3BC;IAKE;IACA,iBAAY,GAAW,EAAE,CAAC,CAAC;IAC3B,SAAI,GAAW,CAAC,CAAC,CAAC;IAClB,WAAM,GAAQ;MACZC,cAAc,EAAE,KAAK;MACrBC,eAAe,EAAE,KAAK;MACtBC,WAAW,EAAE;KACd,CAAC,CAAC;;EAEH;EACAC,YAAY;IACV;EAAA;EAGF;EACAC,cAAc;IACZ;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,IAAI,CAACC,IAAI,UAAU,IAAI,CAACC,YAAY,EAAE,CAAC;IAC5E;EACF;;;AArBWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDN3BhB,0BAAI;MAAAA,2BAAW;MAAAA,iBAAK;MACpBA,gCAAkB;MAAAA,4BAAY;MAAAA,iBAAQ;MACtCA,iCAAuE;MAArDA;QAAA;MAAA,EAA0B;QAAA,OAAWiB,kBAAc;MAAA,EAAzB;MAC1CjB,iCAA0B;MAAAA,yBAAS;MAAAA,iBAAS;MAC5CA,iCAAwB;MAAAA,uBAAO;MAAAA,iBAAS;MAG1CA,gCAAkB;MAAAA,sCAAgB;MAAAA,iBAAQ;MAC1CA,iCAAoD;MAArBA;QAAA;MAAA,EAAkB;MAAjDA,iBAAoD;MAEpDA,4BAAK;MACCA,yBAAQ;MAAAA,iBAAK;MACjBA,iCAA6D;MAAtCA;QAAA;MAAA,EAAmC;MAA1DA,iBAA6D;MAACA,kCAC9D;MAAAA,iCAA8D;MAAvCA;QAAA;MAAA,EAAoC;MAA3DA,iBAA8D;MAACA,mCAC/D;MAAAA,iCAA0D;MAAnCA;QAAA;MAAA,EAAgC;MAAvDA,iBAA0D;MAACA,gCAC7D;MAAAA,iBAAM;MAENA,kCAAmC;MAA3BA;QAAA,OAASiB,oBAAgB;MAAA,EAAC;MAACjB,0BAAS;MAAAA,iBAAS;MACrDA,4BAAK;MACCA,+BAAc;MAAAA,iBAAK;MACvBA,6DAAuC;MACvCA,6DAAoD;MAEtDA,iBAAM;;;MArBYA,eAA0B;MAA1BA,0CAA0B;MAMbA,eAAkB;MAAlBA,kCAAkB;MAIxBA,eAAmC;MAAnCA,mDAAmC;MACnCA,eAAoC;MAApCA,oDAAoC;MACpCA,eAAgC;MAAhCA,gDAAgC;MAMnDA,eAAU;MAAVA,+BAAU;MACVA,eAAkB;MAAlBA,uCAAkB","names":["i0","QuoteComponent","constructor","windowCleaning","balconyCleaning","junkRemoval","onCityChange","calculateQuote","console","log","area","selectedCity","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\shaya\\CleaningQuoteService\\ClientApp\\src\\app\\quote\\quote.component.html","C:\\Users\\shaya\\CleaningQuoteService\\ClientApp\\src\\app\\quote\\quote.component.ts"],"sourcesContent":["<h2>Get a Quote</h2>\n<label for=\"city\">Select City:</label>\n<select id=\"city\" [(ngModel)]=\"selectedCity\" (change)=\"onCityChange()\">\n  <option value=\"Stockholm\">Stockholm</option>\n  <option value=\"Uppsala\">Uppsala</option>\n</select>\n\n<label for=\"area\">Enter Area (m²):</label>\n<input type=\"number\" id=\"area\" [(ngModel)]=\"area\" />\n\n<div>\n  <h3>Add-Ons:</h3>\n  <input type=\"checkbox\" [(ngModel)]=\"addOns.windowCleaning\" /> Window Cleaning\n  <input type=\"checkbox\" [(ngModel)]=\"addOns.balconyCleaning\" /> Balcony Cleaning\n  <input type=\"checkbox\" [(ngModel)]=\"addOns.junkRemoval\" /> Junk Removal\n</div>\n\n<button (click)=\"calculateQuote()\">Get Quote</button>\n<div>\n  <h3>Quote Summary:</h3>\n  <p *ngIf=\"area\">Area: {{ area }} m²</p>\n  <p *ngIf=\"selectedCity\">City: {{ selectedCity }}</p>\n  <!-- Add quote calculation display here -->\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n})\nexport class QuoteComponent {\n  // Define the properties needed for the quote component\n  selectedCity: string = ''; // Initialize to an empty string\n  area: number = 0; // Initialize area to 0\n  addOns: any = {\n    windowCleaning: false,\n    balconyCleaning: false,\n    junkRemoval: false,\n  }; // Initialize addOns with default values\n\n  // Placeholder method for handling city changes\n  onCityChange() {\n    // Logic for city change can be added here\n  }\n\n  // Method to calculate the quote\n  calculateQuote() {\n    // Logic to calculate the quote based on area, city, and selected add-ons\n    // For example, you can display a message or calculate the total price\n    console.log(`Calculating quote for ${this.area} m² in ${this.selectedCity}`);\n    // Add more logic as needed\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}